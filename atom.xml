<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Timmyの自留地</title>
  
  <subtitle>Fighting for Love</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2023-01-22T07:55:09.958Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Timmy(TimFang4162)</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>无垠 2022 跨年红包题解</title>
    <link href="http://example.com/2023/01/22/axton-2022-redpack-solution/"/>
    <id>http://example.com/2023/01/22/axton-2022-redpack-solution/</id>
    <published>2023-01-22T06:27:37.000Z</published>
    <updated>2023-01-22T07:55:09.958Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x00-题面"><a href="#0x00-题面" class="headerlink" title="0x00 题面"></a>0x00 题面</h2><p>题见<a href="https://flyhigher.top/diary/2507.html">无垠 2021 年度总结</a><br>题面为一张图片,链接为<br><a href="https://acdn.flyhigher.top/wp-content/uploads/2021/12/b.jpg">https://acdn.flyhigher.top/wp-content/uploads/2021/12/b.jpg</a>  </p><img src="/2023/01/22/axton-2022-redpack-solution/b.jpg" class=""><h2 id="0x01-Step-1"><a href="#0x01-Step-1" class="headerlink" title="0x01 Step 1"></a>0x01 Step 1</h2><p>观察得知图片本身只是一张风景照，也并没有 Axton 惯用的隐藏压缩文件之类的。<br>查看图片属性，发现备注中写着<code>Original Resolution: 1510x1500</code>,而这与图片尺寸不符，故需要修改图片高度。<br>编辑图片十六进制数据，可以用<code>010 editor</code>,这里使用 Visual Studio Code 的<code>HEX Editor</code>插件<br>参见<a href="https://blog.csdn.net/huangxy10/article/details/8117469">JPEG 图片存储格式及原理_huangxy10 的博客</a></p><img src="/2023/01/22/axton-2022-redpack-solution/QQ%E6%88%AA%E5%9B%BE20230122145224.png" class=""><p>直接搜索<code>FFC0</code>，各字节信息如下。</p><img src="/2023/01/22/axton-2022-redpack-solution/QQ%E6%88%AA%E5%9B%BE20230122144712.png" class=""><table><thead><tr><th>FF C0</th><th>00 11</th><th>08</th><th>04 E2</th><th>05 E6</th></tr></thead><tbody><tr><td>SOF 开始标记</td><td>SOF 标记码长度</td><td></td><td>图像高度</td><td>图像宽度</td></tr><tr><td>我们只需要把 04 E2 修改为 05 DC （也就是1500)即可看到隐藏信息。</td><td></td><td></td><td></td><td></td></tr></tbody></table><img src="/2023/01/22/axton-2022-redpack-solution/b_en.jpg" class=""><p>内容为<br><code>01101000 01110100 01110100 01110000 01110011 00111010 00101111 00101111 01100111 01101111 00110010 00110000 00110010 00110010 01110010 01110000 00101110 01100001 01111000 01110100 01101111 01101110 00101110 01101001 01101101</code><br>解码得<br><code>https://go2022rp.axton.im</code></p><h2 id="0x02-Step-2"><a href="#0x02-Step-2" class="headerlink" title="0x02 Step 2"></a>0x02 Step 2</h2><img src="/2023/01/22/axton-2022-redpack-solution/QQ%E6%88%AA%E5%9B%BE20230122150931.png" class=""><p>说明</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 15 Puzzle Solver</span><span class="token comment">// 使用 Javascript 编写代码，自动求解 15 Puzzle，解出即可获得红包</span><span class="token comment">// 15 Puzzle 的获胜规则应该是不言自明的</span><span class="token comment">// 快速指北：</span><span class="token comment">// - 棋局一定有解，因此你无需额外检查</span><span class="token comment">// - 调用 fps.start() 开始或重启游戏</span><span class="token comment">// - 调用 fps.move(x, y) 移动指定方格（自动匹配可以移动的方向）</span><span class="token comment">// - 或调用 fps.up() fps.down() fps.left() fps.right() 移动方格（自动匹配可以移动的方格）</span><span class="token comment">// - 所有方法的返回值均为 Promise&lt;&#123; status: boolean | string, data: number[][] &#125;>，其中 data 表示当前棋盘，我们使用 15 标识空格</span><span class="token comment">// - 方法的返回值 status 为 false 时方格移动失败，其他任何值都表示方格移动成功</span><span class="token comment">// - 每次只有当上一个操作完成后才能执行下一个操作，强行移动将会被服务器封禁</span><span class="token comment">// - 解出后页面将自动指导你获取红包口令码</span><span class="token comment">// 代码编写完成后，点按代码编辑器右上角的运行按钮执行代码</span><span class="token comment">// 注：如果使用 const 和 let，你可能无法重复运行代码（因为对应变量已被定义）。你可以通过重置按钮来重置运行环境，代码不会丢失</span><span class="token comment">// 新年快乐！祝玩得开心</span><span class="token comment">// 你可以从这里开始</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">await</span> fps<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>题目为一个15 Puzzle，一道经典的OI题，不过语言是JavaScript,且没有直接给出棋盘信息。<br>一种简单的解决办法是<del>Google一下你就知道</del><br>可以搜到一个轮子，<a href="https://github.com/technogeek00/NPuzzleSolver">GitHub:technogeek00&#x2F;NPuzzleSolver</a>,自己做一下数据转换就可以解决</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">function</span> <span class="token function">NPuzzleSolver</span><span class="token punctuation">(</span><span class="token parameter">toSolve</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>grid <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>fixed <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>numbers <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>solution <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>originalGrid <span class="token operator">=</span> toSolve<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token class-name">NPuzzleSolver</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">setupSolver</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>numbers <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>fixed <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>grid <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>originalGrid<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>fixed<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>grid<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>originalGrid<span class="token punctuation">.</span>length<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">var</span> num <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>originalGrid<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>grid<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> num<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>fixed<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>numbers<span class="token punctuation">[</span>num<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span> <span class="token literal-property property">x</span><span class="token operator">:</span> j<span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> i <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  <span class="token class-name">NPuzzleSolver</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">solve</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setupSolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">solveGrid</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>grid<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">.</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>solution<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  <span class="token class-name">NPuzzleSolver</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">solveGrid</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">size</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>size <span class="token operator">></span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token comment">// pattern solve nxn squares greater than 2x2</span>      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">solveRow</span><span class="token punctuation">(</span>size<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// solve the upper row first</span>      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">solveColumn</span><span class="token punctuation">(</span>size<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// solve the left column next</span>      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">solveGrid</span><span class="token punctuation">(</span>size <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// now we can solve the sub (n-1)x(n-1) puzzle</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>size <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">solveRow</span><span class="token punctuation">(</span>size<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// solve the row like normal</span>      <span class="token comment">// rotate last two numbers if they arent in place</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>grid<span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>grid<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>grid<span class="token punctuation">.</span>length <span class="token operator">-</span> size<span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string">""</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">swapE</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>grid<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>grid<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span> <span class="token comment">// smaller than 2 is solved by definition</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  <span class="token class-name">NPuzzleSolver</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">solveRow</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">size</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> rowNumber <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>grid<span class="token punctuation">.</span>length <span class="token operator">-</span> size<span class="token punctuation">;</span>    <span class="token comment">// using row number here because this is also our starting column</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> rowNumber<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>grid<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">var</span> number <span class="token operator">=</span> rowNumber <span class="token operator">*</span> <span class="token keyword">this</span><span class="token punctuation">.</span>grid<span class="token punctuation">.</span>length <span class="token operator">+</span> <span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// calculate the number that is suppose to be at this position</span>      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">moveNumberTowards</span><span class="token punctuation">(</span>number<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span> <span class="token literal-property property">x</span><span class="token operator">:</span> i<span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> rowNumber <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>fixed<span class="token punctuation">[</span>rowNumber<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">var</span> secondToLast <span class="token operator">=</span> rowNumber <span class="token operator">*</span> <span class="token keyword">this</span><span class="token punctuation">.</span>grid<span class="token punctuation">.</span>length <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>grid<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> last <span class="token operator">=</span> secondToLast <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token comment">// position second to last number</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">moveNumberTowards</span><span class="token punctuation">(</span>secondToLast<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>      <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>grid<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span>      <span class="token literal-property property">y</span><span class="token operator">:</span> rowNumber<span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// position last number</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">moveNumberTowards</span><span class="token punctuation">(</span>last<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span> <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>grid<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> rowNumber <span class="token operator">+</span> <span class="token number">1</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// double check to make sure they are in the right position</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>numbers<span class="token punctuation">[</span>secondToLast<span class="token punctuation">]</span><span class="token punctuation">.</span>x <span class="token operator">!=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>grid<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">||</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>numbers<span class="token punctuation">[</span>secondToLast<span class="token punctuation">]</span><span class="token punctuation">.</span>y <span class="token operator">!=</span> rowNumber <span class="token operator">||</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>numbers<span class="token punctuation">[</span>last<span class="token punctuation">]</span><span class="token punctuation">.</span>x <span class="token operator">!=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>grid<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">||</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>numbers<span class="token punctuation">[</span>last<span class="token punctuation">]</span><span class="token punctuation">.</span>y <span class="token operator">!=</span> rowNumber <span class="token operator">+</span> <span class="token number">1</span>    <span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token comment">// the ordering has messed up</span>      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">moveNumberTowards</span><span class="token punctuation">(</span>secondToLast<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>        <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>grid<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span>        <span class="token literal-property property">y</span><span class="token operator">:</span> rowNumber<span class="token punctuation">,</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">moveNumberTowards</span><span class="token punctuation">(</span>last<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span> <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>grid<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> rowNumber <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">moveEmptyTo</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>grid<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> rowNumber <span class="token operator">+</span> <span class="token number">1</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment">// the numbers will be right next to each other</span>      <span class="token keyword">var</span> pos <span class="token operator">=</span> <span class="token punctuation">&#123;</span> <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>grid<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> rowNumber <span class="token operator">+</span> <span class="token number">1</span> <span class="token punctuation">&#125;</span><span class="token punctuation">;</span> <span class="token comment">// square below last one in row</span>      <span class="token keyword">var</span> moveList <span class="token operator">=</span> <span class="token punctuation">[</span>        <span class="token string">"ul"</span><span class="token punctuation">,</span>        <span class="token string">"u"</span><span class="token punctuation">,</span>        <span class="token string">""</span><span class="token punctuation">,</span>        <span class="token string">"l"</span><span class="token punctuation">,</span>        <span class="token string">"dl"</span><span class="token punctuation">,</span>        <span class="token string">"d"</span><span class="token punctuation">,</span>        <span class="token string">""</span><span class="token punctuation">,</span>        <span class="token string">"l"</span><span class="token punctuation">,</span>        <span class="token string">"ul"</span><span class="token punctuation">,</span>        <span class="token string">"u"</span><span class="token punctuation">,</span>        <span class="token string">""</span><span class="token punctuation">,</span>        <span class="token string">"l"</span><span class="token punctuation">,</span>        <span class="token string">"ul"</span><span class="token punctuation">,</span>        <span class="token string">"u"</span><span class="token punctuation">,</span>        <span class="token string">""</span><span class="token punctuation">,</span>        <span class="token string">"d"</span><span class="token punctuation">,</span>      <span class="token punctuation">]</span><span class="token punctuation">;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">applyRelativeMoveList</span><span class="token punctuation">(</span>pos<span class="token punctuation">,</span> moveList<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment">// now we reversed them, the puzzle is solveable!</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// do the special</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">specialTopRightRotation</span><span class="token punctuation">(</span>rowNumber<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// now the row has been solved :D</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  <span class="token class-name">NPuzzleSolver</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">solveColumn</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">size</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> colNumber <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>grid<span class="token punctuation">.</span>length <span class="token operator">-</span> size<span class="token punctuation">;</span>    <span class="token comment">// use column number as this is the starting row</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> colNumber<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>grid<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">var</span> number <span class="token operator">=</span> i <span class="token operator">*</span> <span class="token keyword">this</span><span class="token punctuation">.</span>grid<span class="token punctuation">.</span>length <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">+</span> colNumber<span class="token punctuation">;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">moveNumberTowards</span><span class="token punctuation">(</span>number<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span> <span class="token literal-property property">x</span><span class="token operator">:</span> colNumber<span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> i <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>fixed<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>colNumber<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">var</span> secondToLast <span class="token operator">=</span>      <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>grid<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token keyword">this</span><span class="token punctuation">.</span>grid<span class="token punctuation">.</span>length <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">+</span> colNumber<span class="token punctuation">;</span>    <span class="token keyword">var</span> last <span class="token operator">=</span> secondToLast <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>grid<span class="token punctuation">.</span>length<span class="token punctuation">;</span>    <span class="token comment">// position second to last number</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">moveNumberTowards</span><span class="token punctuation">(</span>secondToLast<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>      <span class="token literal-property property">x</span><span class="token operator">:</span> colNumber<span class="token punctuation">,</span>      <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>grid<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// position last number</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">moveNumberTowards</span><span class="token punctuation">(</span>last<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span> <span class="token literal-property property">x</span><span class="token operator">:</span> colNumber <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>grid<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// double check to make sure they are in the right position</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>numbers<span class="token punctuation">[</span>secondToLast<span class="token punctuation">]</span><span class="token punctuation">.</span>x <span class="token operator">!=</span> colNumber <span class="token operator">||</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>numbers<span class="token punctuation">[</span>secondToLast<span class="token punctuation">]</span><span class="token punctuation">.</span>y <span class="token operator">!=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>grid<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">||</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>numbers<span class="token punctuation">[</span>last<span class="token punctuation">]</span><span class="token punctuation">.</span>x <span class="token operator">!=</span> colNumber <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">||</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>numbers<span class="token punctuation">[</span>last<span class="token punctuation">]</span><span class="token punctuation">.</span>y <span class="token operator">!=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>grid<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span>    <span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token comment">// this happens because the ordering of the two numbers is reversed, we have to reverse them</span>      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">moveNumberTowards</span><span class="token punctuation">(</span>secondToLast<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>        <span class="token literal-property property">x</span><span class="token operator">:</span> colNumber<span class="token punctuation">,</span>        <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>grid<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">moveNumberTowards</span><span class="token punctuation">(</span>last<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span> <span class="token literal-property property">x</span><span class="token operator">:</span> colNumber<span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>grid<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">2</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">moveEmptyTo</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> <span class="token literal-property property">x</span><span class="token operator">:</span> colNumber <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>grid<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">2</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment">// the numbers will be stacked and the empty should be to the left of the last number</span>      <span class="token keyword">var</span> pos <span class="token operator">=</span> <span class="token punctuation">&#123;</span> <span class="token literal-property property">x</span><span class="token operator">:</span> colNumber <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>grid<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span> <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>      <span class="token keyword">var</span> moveList <span class="token operator">=</span> <span class="token punctuation">[</span>        <span class="token string">"ul"</span><span class="token punctuation">,</span>        <span class="token string">"l"</span><span class="token punctuation">,</span>        <span class="token string">""</span><span class="token punctuation">,</span>        <span class="token string">"u"</span><span class="token punctuation">,</span>        <span class="token string">"ur"</span><span class="token punctuation">,</span>        <span class="token string">"r"</span><span class="token punctuation">,</span>        <span class="token string">""</span><span class="token punctuation">,</span>        <span class="token string">"u"</span><span class="token punctuation">,</span>        <span class="token string">"ul"</span><span class="token punctuation">,</span>        <span class="token string">"l"</span><span class="token punctuation">,</span>        <span class="token string">""</span><span class="token punctuation">,</span>        <span class="token string">"u"</span><span class="token punctuation">,</span>        <span class="token string">"ul"</span><span class="token punctuation">,</span>        <span class="token string">"l"</span><span class="token punctuation">,</span>        <span class="token string">""</span><span class="token punctuation">,</span>        <span class="token string">"r"</span><span class="token punctuation">,</span>      <span class="token punctuation">]</span><span class="token punctuation">;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">applyRelativeMoveList</span><span class="token punctuation">(</span>pos<span class="token punctuation">,</span> moveList<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment">// now the order has been officially reversed</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// do the special</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">specialLeftBottomRotation</span><span class="token punctuation">(</span>colNumber<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// now the column is solved</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  <span class="token class-name">NPuzzleSolver</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">applyRelativeMoveList</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">pos<span class="token punctuation">,</span> list</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> list<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>list<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">""</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">swapE</span><span class="token punctuation">(</span>pos<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">swapE</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">offsetPosition</span><span class="token punctuation">(</span>pos<span class="token punctuation">,</span> list<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  <span class="token class-name">NPuzzleSolver</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">moveNumberTowards</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">num<span class="token punctuation">,</span> dest</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// dont bother if the piece is in the right place, it can cause odd things to happen with the space</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>numbers<span class="token punctuation">[</span>num<span class="token punctuation">]</span><span class="token punctuation">.</span>x <span class="token operator">==</span> dest<span class="token punctuation">.</span>x <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>numbers<span class="token punctuation">[</span>num<span class="token punctuation">]</span><span class="token punctuation">.</span>y <span class="token operator">==</span> dest<span class="token punctuation">.</span>y<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span> <span class="token comment">// dont bother</span>    <span class="token comment">// choose where we want the empty square</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">makeEmptyNeighborTo</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// now empty will be next to our number and thats all we need</span>    <span class="token keyword">var</span> counter <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>numbers<span class="token punctuation">[</span>num<span class="token punctuation">]</span><span class="token punctuation">.</span>x <span class="token operator">!=</span> dest<span class="token punctuation">.</span>x <span class="token operator">||</span> <span class="token keyword">this</span><span class="token punctuation">.</span>numbers<span class="token punctuation">[</span>num<span class="token punctuation">]</span><span class="token punctuation">.</span>y <span class="token operator">!=</span> dest<span class="token punctuation">.</span>y<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">var</span> direction <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getDirectionToProceed</span><span class="token punctuation">(</span>num<span class="token punctuation">,</span> dest<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">areNeighbors</span><span class="token punctuation">(</span>num<span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">throw</span> <span class="token string">"cannot rotate without empty"</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>direction <span class="token operator">==</span> <span class="token string">"u"</span> <span class="token operator">||</span> direction <span class="token operator">==</span> <span class="token string">"d"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">rotateVertical</span><span class="token punctuation">(</span>num<span class="token punctuation">,</span> direction <span class="token operator">==</span> <span class="token string">"u"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">rotateHorizontal</span><span class="token punctuation">(</span>num<span class="token punctuation">,</span> direction <span class="token operator">==</span> <span class="token string">"l"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  <span class="token class-name">NPuzzleSolver</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">rotateHorizontal</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">num<span class="token punctuation">,</span> leftDirection</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> side <span class="token operator">=</span> leftDirection <span class="token operator">?</span> <span class="token string">"l"</span> <span class="token operator">:</span> <span class="token string">"r"</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> other <span class="token operator">=</span> leftDirection <span class="token operator">?</span> <span class="token string">"r"</span> <span class="token operator">:</span> <span class="token string">"l"</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> empty <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>numbers<span class="token punctuation">[</span><span class="token string">""</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> pos <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>numbers<span class="token punctuation">[</span>num<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>empty<span class="token punctuation">.</span>y <span class="token operator">!=</span> pos<span class="token punctuation">.</span>y<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token comment">// the empty space is above us</span>      <span class="token keyword">var</span> location <span class="token operator">=</span> empty<span class="token punctuation">.</span>y <span class="token operator">&lt;</span> pos<span class="token punctuation">.</span>y <span class="token operator">?</span> <span class="token string">"u"</span> <span class="token operator">:</span> <span class="token string">"d"</span><span class="token punctuation">;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>        <span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">moveable</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">offsetPosition</span><span class="token punctuation">(</span>pos<span class="token punctuation">,</span> location <span class="token operator">+</span> side<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">||</span>        <span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">moveable</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">offsetPosition</span><span class="token punctuation">(</span>pos<span class="token punctuation">,</span> location<span class="token punctuation">)</span><span class="token punctuation">)</span>      <span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">swapE</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">offsetPosition</span><span class="token punctuation">(</span>pos<span class="token punctuation">,</span> location <span class="token operator">+</span> other<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">swapE</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">offsetPosition</span><span class="token punctuation">(</span>pos<span class="token punctuation">,</span> other<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">proper3By2RotationHorizontal</span><span class="token punctuation">(</span>pos<span class="token punctuation">,</span> leftDirection<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">swapE</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">offsetPosition</span><span class="token punctuation">(</span>pos<span class="token punctuation">,</span> location <span class="token operator">+</span> side<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">swapE</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">offsetPosition</span><span class="token punctuation">(</span>pos<span class="token punctuation">,</span> side<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>      <span class="token punctuation">(</span>empty<span class="token punctuation">.</span>x <span class="token operator">&lt;</span> pos<span class="token punctuation">.</span>x <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>leftDirection<span class="token punctuation">)</span> <span class="token operator">||</span>      <span class="token punctuation">(</span>empty<span class="token punctuation">.</span>x <span class="token operator">></span> pos<span class="token punctuation">.</span>x <span class="token operator">&amp;&amp;</span> leftDirection<span class="token punctuation">)</span>    <span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token comment">// its on the opposite that we want it on</span>      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">proper3By2RotationHorizontal</span><span class="token punctuation">(</span>pos<span class="token punctuation">,</span> leftDirection<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// now it is in the direction we want to go so just swap</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">swapE</span><span class="token punctuation">(</span>pos<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  <span class="token class-name">NPuzzleSolver</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">proper3By2RotationHorizontal</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>    <span class="token parameter">pos<span class="token punctuation">,</span>    leftDirection</span>  <span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> side <span class="token operator">=</span> leftDirection <span class="token operator">?</span> <span class="token string">"l"</span> <span class="token operator">:</span> <span class="token string">"r"</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> other <span class="token operator">=</span> leftDirection <span class="token operator">?</span> <span class="token string">"r"</span> <span class="token operator">:</span> <span class="token string">"l"</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> location <span class="token operator">=</span> <span class="token string">"u"</span><span class="token punctuation">;</span> <span class="token comment">// assume up as default</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">moveable</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">offsetPosition</span><span class="token punctuation">(</span>pos<span class="token punctuation">,</span> <span class="token string">"d"</span> <span class="token operator">+</span> side<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">moveable</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">offsetPosition</span><span class="token punctuation">(</span>pos<span class="token punctuation">,</span> <span class="token string">"d"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">moveable</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">offsetPosition</span><span class="token punctuation">(</span>pos<span class="token punctuation">,</span> <span class="token string">"d"</span> <span class="token operator">+</span> other<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      location <span class="token operator">=</span> <span class="token string">"d"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>      <span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">moveable</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">offsetPosition</span><span class="token punctuation">(</span>pos<span class="token punctuation">,</span> <span class="token string">"u"</span> <span class="token operator">+</span> side<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">||</span>      <span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">moveable</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">offsetPosition</span><span class="token punctuation">(</span>pos<span class="token punctuation">,</span> <span class="token string">"u"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">||</span>      <span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">moveable</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">offsetPosition</span><span class="token punctuation">(</span>pos<span class="token punctuation">,</span> <span class="token string">"u"</span> <span class="token operator">+</span> other<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">throw</span> <span class="token string">"unable to move up all spots fixed"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">swapE</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">offsetPosition</span><span class="token punctuation">(</span>pos<span class="token punctuation">,</span> location <span class="token operator">+</span> other<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">swapE</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">offsetPosition</span><span class="token punctuation">(</span>pos<span class="token punctuation">,</span> location<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">swapE</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">offsetPosition</span><span class="token punctuation">(</span>pos<span class="token punctuation">,</span> location <span class="token operator">+</span> side<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">swapE</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">offsetPosition</span><span class="token punctuation">(</span>pos<span class="token punctuation">,</span> side<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  <span class="token class-name">NPuzzleSolver</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">rotateVertical</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">num<span class="token punctuation">,</span> upDirection</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> toward <span class="token operator">=</span> upDirection <span class="token operator">?</span> <span class="token string">"u"</span> <span class="token operator">:</span> <span class="token string">"d"</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> away <span class="token operator">=</span> upDirection <span class="token operator">?</span> <span class="token string">"d"</span> <span class="token operator">:</span> <span class="token string">"u"</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> empty <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>numbers<span class="token punctuation">[</span><span class="token string">""</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> pos <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>numbers<span class="token punctuation">[</span>num<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>empty<span class="token punctuation">.</span>x <span class="token operator">!=</span> pos<span class="token punctuation">.</span>x<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token comment">// its to the right or left</span>      <span class="token keyword">var</span> side <span class="token operator">=</span> empty<span class="token punctuation">.</span>x <span class="token operator">&lt;</span> pos<span class="token punctuation">.</span>x <span class="token operator">?</span> <span class="token string">"l"</span> <span class="token operator">:</span> <span class="token string">"r"</span><span class="token punctuation">;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>        <span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">moveable</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">offsetPosition</span><span class="token punctuation">(</span>pos<span class="token punctuation">,</span> toward <span class="token operator">+</span> side<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">||</span>        <span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">moveable</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">offsetPosition</span><span class="token punctuation">(</span>pos<span class="token punctuation">,</span> side<span class="token punctuation">)</span><span class="token punctuation">)</span>      <span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">swapE</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">offsetPosition</span><span class="token punctuation">(</span>pos<span class="token punctuation">,</span> away <span class="token operator">+</span> side<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">swapE</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">offsetPosition</span><span class="token punctuation">(</span>pos<span class="token punctuation">,</span> away<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">proper2By3RotationVertical</span><span class="token punctuation">(</span>pos<span class="token punctuation">,</span> upDirection<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">swapE</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">offsetPosition</span><span class="token punctuation">(</span>pos<span class="token punctuation">,</span> toward <span class="token operator">+</span> side<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">swapE</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">offsetPosition</span><span class="token punctuation">(</span>pos<span class="token punctuation">,</span> toward<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>      <span class="token punctuation">(</span>empty<span class="token punctuation">.</span>y <span class="token operator">&lt;</span> pos<span class="token punctuation">.</span>y <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>upDirection<span class="token punctuation">)</span> <span class="token operator">||</span>      <span class="token punctuation">(</span>empty<span class="token punctuation">.</span>y <span class="token operator">></span> pos<span class="token punctuation">.</span>y <span class="token operator">&amp;&amp;</span> upDirection<span class="token punctuation">)</span>    <span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token comment">// its in the opposite direction we want to go</span>      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">proper2By3RotationVertical</span><span class="token punctuation">(</span>pos<span class="token punctuation">,</span> upDirection<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// now the empty is in the direction we need to go</span>    <span class="token comment">// so just swap with it</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">swapE</span><span class="token punctuation">(</span>pos<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  <span class="token class-name">NPuzzleSolver</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">proper2By3RotationVertical</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>    <span class="token parameter">pos<span class="token punctuation">,</span>    upDirection</span>  <span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> toward <span class="token operator">=</span> upDirection <span class="token operator">?</span> <span class="token string">"u"</span> <span class="token operator">:</span> <span class="token string">"d"</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> away <span class="token operator">=</span> upDirection <span class="token operator">?</span> <span class="token string">"d"</span> <span class="token operator">:</span> <span class="token string">"u"</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> side <span class="token operator">=</span> <span class="token string">"r"</span><span class="token punctuation">;</span> <span class="token comment">// default to right column usage</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">moveable</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">offsetPosition</span><span class="token punctuation">(</span>pos<span class="token punctuation">,</span> toward <span class="token operator">+</span> <span class="token string">"l"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">moveable</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">offsetPosition</span><span class="token punctuation">(</span>pos<span class="token punctuation">,</span> <span class="token string">"l"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">moveable</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">offsetPosition</span><span class="token punctuation">(</span>pos<span class="token punctuation">,</span> away <span class="token operator">+</span> <span class="token string">"l"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      side <span class="token operator">=</span> <span class="token string">"l"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>      <span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">moveable</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">offsetPosition</span><span class="token punctuation">(</span>pos<span class="token punctuation">,</span> toward <span class="token operator">+</span> <span class="token string">"r"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">||</span>      <span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">moveable</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">offsetPosition</span><span class="token punctuation">(</span>pos<span class="token punctuation">,</span> <span class="token string">"r"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">||</span>      <span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">moveable</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">offsetPosition</span><span class="token punctuation">(</span>pos<span class="token punctuation">,</span> away <span class="token operator">+</span> <span class="token string">"r"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">throw</span> <span class="token string">"Unable to preform move, the puzzle is quite possibly unsolveable"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">swapE</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">offsetPosition</span><span class="token punctuation">(</span>pos<span class="token punctuation">,</span> away <span class="token operator">+</span> side<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">swapE</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">offsetPosition</span><span class="token punctuation">(</span>pos<span class="token punctuation">,</span> side<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">swapE</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">offsetPosition</span><span class="token punctuation">(</span>pos<span class="token punctuation">,</span> toward <span class="token operator">+</span> side<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">swapE</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">offsetPosition</span><span class="token punctuation">(</span>pos<span class="token punctuation">,</span> toward<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  <span class="token class-name">NPuzzleSolver</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">specialTopRightRotation</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">top</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// lock the two pieces</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>fixed<span class="token punctuation">[</span>top<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>grid<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>fixed<span class="token punctuation">[</span>top <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>grid<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token comment">// preform the swap</span>    <span class="token keyword">var</span> topRight <span class="token operator">=</span> <span class="token punctuation">&#123;</span> <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>grid<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> top <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">moveEmptyTo</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">offsetPosition</span><span class="token punctuation">(</span>topRight<span class="token punctuation">,</span> <span class="token string">"l"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">swapE</span><span class="token punctuation">(</span>topRight<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">swapE</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">offsetPosition</span><span class="token punctuation">(</span>topRight<span class="token punctuation">,</span> <span class="token string">"d"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// lock proper pieces and unlock extra from next row</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>fixed<span class="token punctuation">[</span>top <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>grid<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>fixed<span class="token punctuation">[</span>topRight<span class="token punctuation">.</span>y<span class="token punctuation">]</span><span class="token punctuation">[</span>topRight<span class="token punctuation">.</span>x <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  <span class="token class-name">NPuzzleSolver</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">specialLeftBottomRotation</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">left</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// lock the two pieces</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>fixed<span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>grid<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>left<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>fixed<span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>grid<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>left <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token comment">// preform the swap</span>    <span class="token keyword">var</span> leftBottom <span class="token operator">=</span> <span class="token punctuation">&#123;</span> <span class="token literal-property property">x</span><span class="token operator">:</span> left<span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>grid<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span> <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">moveEmptyTo</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">offsetPosition</span><span class="token punctuation">(</span>leftBottom<span class="token punctuation">,</span> <span class="token string">"u"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">swapE</span><span class="token punctuation">(</span>leftBottom<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">swapE</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">offsetPosition</span><span class="token punctuation">(</span>leftBottom<span class="token punctuation">,</span> <span class="token string">"r"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// lock proper pieces and unlock extras from next column</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>fixed<span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>grid<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>left <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>fixed<span class="token punctuation">[</span>leftBottom<span class="token punctuation">.</span>y <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>leftBottom<span class="token punctuation">.</span>x<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  <span class="token class-name">NPuzzleSolver</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">getDirectionToProceed</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">num<span class="token punctuation">,</span> dest</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> cur <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>numbers<span class="token punctuation">[</span>num<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> diffx <span class="token operator">=</span> dest<span class="token punctuation">.</span>x <span class="token operator">-</span> cur<span class="token punctuation">.</span>x<span class="token punctuation">;</span>    <span class="token keyword">var</span> diffy <span class="token operator">=</span> dest<span class="token punctuation">.</span>y <span class="token operator">-</span> cur<span class="token punctuation">.</span>y<span class="token punctuation">;</span>    <span class="token comment">// case 1, we need to move left and are not being blocked</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>diffx <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">moveable</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> <span class="token literal-property property">x</span><span class="token operator">:</span> cur<span class="token punctuation">.</span>x <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> cur<span class="token punctuation">.</span>y <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> <span class="token string">"l"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// case 2, we need to move right and are not being blocked</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>diffx <span class="token operator">></span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">moveable</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> <span class="token literal-property property">x</span><span class="token operator">:</span> cur<span class="token punctuation">.</span>x <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> cur<span class="token punctuation">.</span>y <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> <span class="token string">"r"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// case 3, we need to move up</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>diffy <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">moveable</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> <span class="token literal-property property">x</span><span class="token operator">:</span> cur<span class="token punctuation">.</span>x<span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> cur<span class="token punctuation">.</span>y <span class="token operator">-</span> <span class="token number">1</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> <span class="token string">"u"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// case 4, we need to move down</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>diffy <span class="token operator">></span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">moveable</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> <span class="token literal-property property">x</span><span class="token operator">:</span> cur<span class="token punctuation">.</span>x<span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> cur<span class="token punctuation">.</span>y <span class="token operator">+</span> <span class="token number">1</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> <span class="token string">"d"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">throw</span> <span class="token string">"There is no valid move, the puzzle was incorrectly shuffled"</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  <span class="token class-name">NPuzzleSolver</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">makeEmptyNeighborTo</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">num<span class="token punctuation">,</span> boundry</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> gotoPos <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>numbers<span class="token punctuation">[</span>num<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> counter <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span>      <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>numbers<span class="token punctuation">[</span><span class="token string">""</span><span class="token punctuation">]</span><span class="token punctuation">.</span>x <span class="token operator">!=</span> gotoPos<span class="token punctuation">.</span>x <span class="token operator">||</span> <span class="token keyword">this</span><span class="token punctuation">.</span>numbers<span class="token punctuation">[</span><span class="token string">""</span><span class="token punctuation">]</span><span class="token punctuation">.</span>y <span class="token operator">!=</span> gotoPos<span class="token punctuation">.</span>y<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>      <span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">areNeighbors</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">,</span> num<span class="token punctuation">)</span>    <span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">movingEmptyLoop</span><span class="token punctuation">(</span>gotoPos<span class="token punctuation">)</span><span class="token punctuation">;</span>      counter<span class="token operator">++</span><span class="token punctuation">;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>counter <span class="token operator">></span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">throw</span> <span class="token string">"Infinite loop hit while solving the puzzle, it is quite likely this puzzle is invalid"</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  <span class="token class-name">NPuzzleSolver</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">moveEmptyTo</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">pos</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// check to see if the pos is a fixed number</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>fixed<span class="token punctuation">[</span>pos<span class="token punctuation">.</span>y<span class="token punctuation">]</span><span class="token punctuation">[</span>pos<span class="token punctuation">.</span>x<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">throw</span> <span class="token string">"cannot move empty to a fixed position"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">var</span> counter <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>numbers<span class="token punctuation">[</span><span class="token string">""</span><span class="token punctuation">]</span><span class="token punctuation">.</span>x <span class="token operator">!=</span> pos<span class="token punctuation">.</span>x <span class="token operator">||</span> <span class="token keyword">this</span><span class="token punctuation">.</span>numbers<span class="token punctuation">[</span><span class="token string">""</span><span class="token punctuation">]</span><span class="token punctuation">.</span>y <span class="token operator">!=</span> pos<span class="token punctuation">.</span>y<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">movingEmptyLoop</span><span class="token punctuation">(</span>pos<span class="token punctuation">)</span><span class="token punctuation">;</span>      counter<span class="token operator">++</span><span class="token punctuation">;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>counter <span class="token operator">></span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"problem trying to move the piece"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">break</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  <span class="token class-name">NPuzzleSolver</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">movingEmptyLoop</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">pos</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> empty <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>numbers<span class="token punctuation">[</span><span class="token string">""</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> diffx <span class="token operator">=</span> empty<span class="token punctuation">.</span>x <span class="token operator">-</span> pos<span class="token punctuation">.</span>x<span class="token punctuation">;</span>    <span class="token keyword">var</span> diffy <span class="token operator">=</span> empty<span class="token punctuation">.</span>y <span class="token operator">-</span> pos<span class="token punctuation">.</span>y<span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>diffx <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">canSwap</span><span class="token punctuation">(</span>empty<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">offsetPosition</span><span class="token punctuation">(</span>empty<span class="token punctuation">,</span> <span class="token string">"r"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">swap</span><span class="token punctuation">(</span>empty<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">offsetPosition</span><span class="token punctuation">(</span>empty<span class="token punctuation">,</span> <span class="token string">"r"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>      diffx <span class="token operator">></span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">canSwap</span><span class="token punctuation">(</span>empty<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">offsetPosition</span><span class="token punctuation">(</span>empty<span class="token punctuation">,</span> <span class="token string">"l"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">swap</span><span class="token punctuation">(</span>empty<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">offsetPosition</span><span class="token punctuation">(</span>empty<span class="token punctuation">,</span> <span class="token string">"l"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>      diffy <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">canSwap</span><span class="token punctuation">(</span>empty<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">offsetPosition</span><span class="token punctuation">(</span>empty<span class="token punctuation">,</span> <span class="token string">"d"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">swap</span><span class="token punctuation">(</span>empty<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">offsetPosition</span><span class="token punctuation">(</span>empty<span class="token punctuation">,</span> <span class="token string">"d"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>      diffy <span class="token operator">></span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">canSwap</span><span class="token punctuation">(</span>empty<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">offsetPosition</span><span class="token punctuation">(</span>empty<span class="token punctuation">,</span> <span class="token string">"u"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">swap</span><span class="token punctuation">(</span>empty<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">offsetPosition</span><span class="token punctuation">(</span>empty<span class="token punctuation">,</span> <span class="token string">"u"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  <span class="token class-name">NPuzzleSolver</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">offsetPosition</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">pos<span class="token punctuation">,</span> direction</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>direction <span class="token operator">==</span> <span class="token string">"u"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> <span class="token punctuation">&#123;</span> <span class="token literal-property property">x</span><span class="token operator">:</span> pos<span class="token punctuation">.</span>x<span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> pos<span class="token punctuation">.</span>y <span class="token operator">-</span> <span class="token number">1</span> <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>direction <span class="token operator">==</span> <span class="token string">"d"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> <span class="token punctuation">&#123;</span> <span class="token literal-property property">x</span><span class="token operator">:</span> pos<span class="token punctuation">.</span>x<span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> pos<span class="token punctuation">.</span>y <span class="token operator">+</span> <span class="token number">1</span> <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>direction <span class="token operator">==</span> <span class="token string">"l"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> <span class="token punctuation">&#123;</span> <span class="token literal-property property">x</span><span class="token operator">:</span> pos<span class="token punctuation">.</span>x <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> pos<span class="token punctuation">.</span>y <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>direction <span class="token operator">==</span> <span class="token string">"r"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> <span class="token punctuation">&#123;</span> <span class="token literal-property property">x</span><span class="token operator">:</span> pos<span class="token punctuation">.</span>x <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> pos<span class="token punctuation">.</span>y <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>direction <span class="token operator">==</span> <span class="token string">"ul"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> <span class="token punctuation">&#123;</span> <span class="token literal-property property">x</span><span class="token operator">:</span> pos<span class="token punctuation">.</span>x <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> pos<span class="token punctuation">.</span>y <span class="token operator">-</span> <span class="token number">1</span> <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>direction <span class="token operator">==</span> <span class="token string">"ur"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> <span class="token punctuation">&#123;</span> <span class="token literal-property property">x</span><span class="token operator">:</span> pos<span class="token punctuation">.</span>x <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> pos<span class="token punctuation">.</span>y <span class="token operator">-</span> <span class="token number">1</span> <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>direction <span class="token operator">==</span> <span class="token string">"dl"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> <span class="token punctuation">&#123;</span> <span class="token literal-property property">x</span><span class="token operator">:</span> pos<span class="token punctuation">.</span>x <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> pos<span class="token punctuation">.</span>y <span class="token operator">+</span> <span class="token number">1</span> <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>direction <span class="token operator">==</span> <span class="token string">"dr"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> <span class="token punctuation">&#123;</span> <span class="token literal-property property">x</span><span class="token operator">:</span> pos<span class="token punctuation">.</span>x <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> pos<span class="token punctuation">.</span>y <span class="token operator">+</span> <span class="token number">1</span> <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> pos<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  <span class="token class-name">NPuzzleSolver</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">areNeighbors</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">first<span class="token punctuation">,</span> second</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> num1 <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>numbers<span class="token punctuation">[</span>first<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> num2 <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>numbers<span class="token punctuation">[</span>second<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span>      <span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span>num1<span class="token punctuation">.</span>x <span class="token operator">-</span> num2<span class="token punctuation">.</span>x<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span> <span class="token operator">&amp;&amp;</span> num1<span class="token punctuation">.</span>y <span class="token operator">==</span> num2<span class="token punctuation">.</span>y<span class="token punctuation">)</span> <span class="token operator">||</span>      <span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span>num1<span class="token punctuation">.</span>y <span class="token operator">-</span> num2<span class="token punctuation">.</span>y<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span> <span class="token operator">&amp;&amp;</span> num1<span class="token punctuation">.</span>x <span class="token operator">==</span> num2<span class="token punctuation">.</span>x<span class="token punctuation">)</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  <span class="token class-name">NPuzzleSolver</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">moveable</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">pos</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">validPos</span><span class="token punctuation">(</span>pos<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>fixed<span class="token punctuation">[</span>pos<span class="token punctuation">.</span>y<span class="token punctuation">]</span><span class="token punctuation">[</span>pos<span class="token punctuation">.</span>x<span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  <span class="token class-name">NPuzzleSolver</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">validPos</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">pos</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token operator">!</span><span class="token punctuation">(</span>      pos<span class="token punctuation">.</span>x <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span>      pos<span class="token punctuation">.</span>x <span class="token operator">>=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>grid<span class="token punctuation">.</span>length <span class="token operator">||</span>      pos<span class="token punctuation">.</span>y <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span>      pos<span class="token punctuation">.</span>y <span class="token operator">>=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>grid<span class="token punctuation">.</span>length    <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  <span class="token class-name">NPuzzleSolver</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">canSwap</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">pos1<span class="token punctuation">,</span> pos2</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">validPos</span><span class="token punctuation">(</span>pos1<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">validPos</span><span class="token punctuation">(</span>pos2<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">var</span> num1 <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>grid<span class="token punctuation">[</span>pos1<span class="token punctuation">.</span>y<span class="token punctuation">]</span><span class="token punctuation">[</span>pos1<span class="token punctuation">.</span>x<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> num2 <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>grid<span class="token punctuation">[</span>pos2<span class="token punctuation">.</span>y<span class="token punctuation">]</span><span class="token punctuation">[</span>pos2<span class="token punctuation">.</span>x<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">areNeighbors</span><span class="token punctuation">(</span>num1<span class="token punctuation">,</span> num2<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// check fixed positions</span>    <span class="token keyword">return</span> <span class="token operator">!</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>fixed<span class="token punctuation">[</span>pos1<span class="token punctuation">.</span>y<span class="token punctuation">]</span><span class="token punctuation">[</span>pos1<span class="token punctuation">.</span>x<span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token keyword">this</span><span class="token punctuation">.</span>fixed<span class="token punctuation">[</span>pos2<span class="token punctuation">.</span>y<span class="token punctuation">]</span><span class="token punctuation">[</span>pos2<span class="token punctuation">.</span>x<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  <span class="token class-name">NPuzzleSolver</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">swapE</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">pos</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">swap</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>numbers<span class="token punctuation">[</span><span class="token string">""</span><span class="token punctuation">]</span><span class="token punctuation">,</span> pos<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  <span class="token class-name">NPuzzleSolver</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">swap</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">pos1<span class="token punctuation">,</span> pos2</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> num1 <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>grid<span class="token punctuation">[</span>pos1<span class="token punctuation">.</span>y<span class="token punctuation">]</span><span class="token punctuation">[</span>pos1<span class="token punctuation">.</span>x<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> num2 <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>grid<span class="token punctuation">[</span>pos2<span class="token punctuation">.</span>y<span class="token punctuation">]</span><span class="token punctuation">[</span>pos2<span class="token punctuation">.</span>x<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token comment">// guard against illegal moves</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">areNeighbors</span><span class="token punctuation">(</span>num1<span class="token punctuation">,</span> num2<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">throw</span> <span class="token string">"These numbers are not neighbors and cannot be swapped"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>num1 <span class="token operator">!=</span> <span class="token string">""</span> <span class="token operator">&amp;&amp;</span> num2 <span class="token operator">!=</span> <span class="token string">""</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">throw</span> <span class="token string">"You must swap with an empty space"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">var</span> oldPos1 <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>numbers<span class="token punctuation">[</span>num1<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>numbers<span class="token punctuation">[</span>num1<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>numbers<span class="token punctuation">[</span>num2<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>numbers<span class="token punctuation">[</span>num2<span class="token punctuation">]</span> <span class="token operator">=</span> oldPos1<span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>grid<span class="token punctuation">[</span>pos1<span class="token punctuation">.</span>y<span class="token punctuation">]</span><span class="token punctuation">[</span>pos1<span class="token punctuation">.</span>x<span class="token punctuation">]</span> <span class="token operator">=</span> num2<span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>grid<span class="token punctuation">[</span>pos2<span class="token punctuation">.</span>y<span class="token punctuation">]</span><span class="token punctuation">[</span>pos2<span class="token punctuation">.</span>x<span class="token punctuation">]</span> <span class="token operator">=</span> num1<span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>solution<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token literal-property property">empty</span><span class="token operator">:</span> num1 <span class="token operator">==</span> <span class="token string">""</span> <span class="token operator">?</span> pos1 <span class="token operator">:</span> pos2<span class="token punctuation">,</span>      <span class="token literal-property property">piece</span><span class="token operator">:</span> num1 <span class="token operator">==</span> <span class="token string">""</span> <span class="token operator">?</span> pos2 <span class="token operator">:</span> pos1<span class="token punctuation">,</span>      <span class="token literal-property property">number</span><span class="token operator">:</span> num1 <span class="token operator">==</span> <span class="token string">""</span> <span class="token operator">?</span> num2 <span class="token operator">:</span> num1<span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> puzzle_start <span class="token operator">=</span> <span class="token keyword">await</span> fps<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> puzzle_data <span class="token operator">=</span> puzzle_start<span class="token punctuation">.</span>data<span class="token punctuation">;</span>  <span class="token keyword">const</span> new_puzzle <span class="token operator">=</span> puzzle_data<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token operator">=></span>    x<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">y</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>y <span class="token operator">===</span> <span class="token number">15</span> <span class="token operator">?</span> <span class="token string">""</span> <span class="token operator">:</span> y <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//   console.log(puzzle_data);</span><span class="token comment">//   console.log(new_puzzle);</span>  <span class="token keyword">const</span> solver <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">NPuzzleSolver</span><span class="token punctuation">(</span>new_puzzle<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> solution <span class="token operator">=</span> solver<span class="token punctuation">.</span><span class="token function">solve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>solution<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span>each <span class="token keyword">of</span> solution<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">await</span> fps<span class="token punctuation">.</span><span class="token function">move</span><span class="token punctuation">(</span>each<span class="token punctuation">.</span>piece<span class="token punctuation">.</span>x<span class="token punctuation">,</span> each<span class="token punctuation">.</span>piece<span class="token punctuation">.</span>y<span class="token punctuation">)</span>    <span class="token comment">// console.log(each.piece);</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><img src="/2023/01/22/axton-2022-redpack-solution/QQ%E6%88%AA%E5%9B%BE20230122154854.png" class=""><pre class="line-numbers language-plain" data-language="plain"><code class="language-plain">Well done! Go to 🎉.yrc.me to get your reward!<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>done.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;0x00-题面&quot;&gt;&lt;a href=&quot;#0x00-题面&quot; class=&quot;headerlink&quot; title=&quot;0x00 题面&quot;&gt;&lt;/a&gt;0x00 题面&lt;/h2&gt;&lt;p&gt;题见&lt;a href=&quot;https://flyhigher.top/diary/2507.html&quot;&gt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>星轨摄影指北</title>
    <link href="http://example.com/2023/01/20/Guide-to-Star-trail-photography/"/>
    <id>http://example.com/2023/01/20/Guide-to-Star-trail-photography/</id>
    <published>2023-01-20T07:37:50.000Z</published>
    <updated>2023-01-22T07:55:09.814Z</updated>
    
    <content type="html"><![CDATA[<p>话不多说先放成果图(<a href="StarStaX_IMG_20230119_200407-IMG_20230119_202953_lighten_final_result_no_compress.jpg">原图</a>)  </p><img src="/2023/01/20/Guide-to-Star-trail-photography/StarStaX_IMG_20230119_200407-IMG_20230119_202953_lighten_final_result.jpg" class="" title="成果图_压缩后"><p>使用手机拍摄，45张长曝光堆栈，单张曝光时间30s。<br>拍摄地光污染2级。</p><h2 id="Turorial"><a href="#Turorial" class="headerlink" title="Turorial"></a>Turorial</h2><h3 id="0x00-Requirements"><a href="#0x00-Requirements" class="headerlink" title="0x00 Requirements"></a>0x00 Requirements</h3><p>你需要：  </p><ul><li>一个能修改曝光时间的摄影器材，手机或相机均可</li><li>三脚架(没有的话可以找一个能固定住相机的东西 <del>比如一叠硬币</del>)</li><li>电动快门线&#x2F;耳机线&#x2F;手*</li></ul><p>*由于我这里条件很简陋，我采用将手机投屏到电脑，由Power Automate控制定时点击快门按钮(<del>绝了</del>)</p><h3 id="0x01-Planning"><a href="#0x01-Planning" class="headerlink" title="0x01 Planning"></a>0x01 Planning</h3><p>在开始之前，你需要计划拍摄目标。<br>使用<code>天文通小程序/天文通APP</code>查看当地的光污染情况，过高的光污染等级会影响可见星数。<br>使用天文通APP的<code>星图</code>功能决定拍摄角度，使用指北针寻找星空旋转中心（北极星）。离旋转中心越远，拍摄的时间越短。</p><h3 id="0x02-Shot"><a href="#0x02-Shot" class="headerlink" title="0x02 Shot"></a>0x02 Shot</h3><p>如果是手机，请打开专业模式。<br>光圈选择最小，ISO设置较低（一般800左右，我使用50，根据情况调整），曝光时间设置最大，手动对焦到无限远，使用RAW格式拍摄(预留后期调整空间)。<br>相机用户请使用快门线控制（如果内置间隔拍摄更好），间隔一定时间(&gt;&#x3D;曝光时间，如果两张照片间时间过长会导致星轨不连续)按一次快门。<br>手机用户可以用耳机线&#x2F;手等控制快门，也可以使用scrcpy等软件将屏幕投到电脑上，用RPA软件控制快门。</p><table><thead><tr><th>快门线</th><th>RPA控制快门</th></tr></thead><tbody><tr><td><img src="/2023/01/20/Guide-to-Star-trail-photography/R-C.jpg" class=""></td><td><img src="/2023/01/20/Guide-to-Star-trail-photography/rpa.png" class=""></td></tr></tbody></table><p>因为要长时间拍摄，请注意设备温度及电量。可以找个舒服的椅子坐着，冬天请做好保暖。</p><h3 id="0x03-Process"><a href="#0x03-Process" class="headerlink" title="0x03 Process"></a>0x03 Process</h3><p>可以使用Photoshop的图层功能堆栈照片(图层混合模式为变亮)，但使用StarStaX软件会更加方便。</p><blockquote><p><strong>Advertisement</strong><br>天文通公众号发送星轨获取下载链接。<br>这是一个小应用程序，让你选择多个图像，然后合并成一个单一的星轨图像。</p></blockquote><p>也可以堆栈完后修个图调个色啥的，比如图中我把最后两颗星星提亮了一点，更有动态感。</p><h3 id="0x04-Finish"><a href="#0x04-Finish" class="headerlink" title="0x04 Finish"></a>0x04 Finish</h3><p>最后，你会得到一张漂亮的星轨照片。配文发朋友圈是最棒不过的了。<br>祝各位追星愉快 :D</p><h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><ol><li>“超简单6步！手把手教你拍星轨，1分钟出图（StarStaX） | 天文通.” <a href="https://laysky.com/guide/how-to-create-star-trail-astrophotos.html#%E5%85%AD%E6%AD%A5%E5%A4%A7%E6%B3%95">https://laysky.com/guide/how-to-create-star-trail-astrophotos.html#%E5%85%AD%E6%AD%A5%E5%A4%A7%E6%B3%95</a></li><li>“天文通 - 全球光污染地图.” <a href="https://darkmap.cn/">https://darkmap.cn/</a></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;话不多说先放成果图(&lt;a href=&quot;StarStaX_IMG_20230119_200407-IMG_20230119_202953_lighten_final_result_no_compress.jpg&quot;&gt;原图&lt;/a&gt;)  &lt;/p&gt;
&lt;img src=&quot;/2023/0</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>About</title>
    <link href="http://example.com/2022/07/27/about/"/>
    <id>http://example.com/2022/07/27/about/</id>
    <published>2022-07-27T08:53:01.000Z</published>
    <updated>2023-01-22T07:55:09.958Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>你掀起山河奔向我，踏尽星粒来访我。</p></blockquote><p>Well, 欢迎光临。<br>高中生， 会写代码， 半个全栈， 一事无成。</p><h2 id="Tags"><a href="#Tags" class="headerlink" title="Tags"></a>Tags</h2><ul><li>成绩平平</li><li>会一些乱七八糟的语言， 有 Vue, JavaScript, Python, etc.</li><li>VSCode党， 当然更多时候是Vim</li><li><del>主业写Bug, 副业Debug</del></li><li>会一点平面设计， 常备Adobe全家桶, <del>虽然会用的没几个</del></li><li>爱好摄影， 富士党</li><li>会折腾Arduino， 买了理财产品<del>(树莓派)</del></li><li><del>（也许）</del>理论型飞手， 至今没有实践过</li></ul><h2 id="Donate"><a href="#Donate" class="headerlink" title="Donate"></a>Donate</h2><p>如果你喜欢我<del>的项目</del>， 请支持我。</p><p><a href="https://afdian.net/@timfang4162">爱发电</a></p><h2 id="Contact"><a href="#Contact" class="headerlink" title="Contact"></a>Contact</h2><ul><li><a href="https://github.com/Timfang4162">Github</a></li><li><a href="mailto:timfang114514@gmail.com">Email</a></li><li><a href="https://t.me/TimFang4162">Telegram</a></li><li>QQ 1585972840</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;你掀起山河奔向我，踏尽星粒来访我。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Well, 欢迎光临。&lt;br&gt;高中生， 会写代码， 半个全栈， 一事无成。&lt;/p&gt;
&lt;h2 id=&quot;Tags&quot;&gt;&lt;a href=&quot;#Tags&quot; class=&quot;header</summary>
      
    
    
    
    
  </entry>
  
</feed>
